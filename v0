# shellcheck shell=bash disable=SC2039,3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io

# Section: main

xrc param/v0

tldr(){
    param:dsl <<A
subcommands:
    update      "Update"
    ls          "list all possible commands"
    lang        "Prefered language"
    cat         "cat"
A
    param:run

    if [ -z "${PARAM_SUBCMD}" ]; then
        tldr cat "$@"
        return
    fi

    "___tldr_$PARAM_SUBCMD" "$@"
}

_______X_CMD_TLDR_ROOT="$___X_CMD_ROOT/.tmp/tldr"

_______tldr_download(){
    local src="${1:?src}"
    local dst="${2:-$1}"

    local CACHE="$_______X_CMD_TLDR_ROOT/$dst"

    local url="https://gitee.com/x-cmd/tldr/raw/main/dist/$src"
    if [ "$___X_CMD_IN_CHINA_NET" != 1 ]; then
        url="https://raw.githubusercontent.com/x-cmd/tldr/main/dist/$src"
    fi

    ___x_cmd_curl "$url" 2>/dev/null
}

___tldr_current(){
    if [ ! -f "$_______X_CMD_TLDR_ROOT/index.yml" ]; then
        return 1
    fi

    local version="$(cat "$_______X_CMD_TLDR_ROOT/index.yml")"
    version="${version%%
*}"
    version="${version#* }"
    printf "%s" "$version"
}

___tldr_update()(
    if ! ___X_CMD_CURL_UPDATE=1 _______tldr_download index.yml; then
        printf "%s\n" "Fail to update index.yml." >&2
        return 1
    fi

    local version="$(___tldr_current)"
    version="${version%%
*}"
    version="${version#* }"

    if [ -d "$_______X_CMD_TLDR_ROOT/$version/pages" ]; then
        printf "pages already exists.\n" >&2
        return
    fi

    mkdir -p "$_______X_CMD_TLDR_ROOT/$version/pages"
    if ! _______tldr_download "$version/pages.tgz" "$version/pages/pages.tgz"; then
        printf "%s\n" "Fail to update pages." >&2
        return 1
    fi

    if cd "$_______X_CMD_TLDR_ROOT/$version/pages" && tar xvf pages.tgz 2>/dev/null; then
        printf "Already upload version to %s.\n" "$version" >&2
    fi

)

___tldr_current_or_update(){
    local version
    if ! version="$(___tldr_current)"; then
        if ! ___tldr_update; then
            return 1
        fi
        ___tldr_cureent
        return
    else
        printf "%s" "$version"
    fi
}

___tldr_use(){
    :
}

___tldr_ls()(
    local version
    version="$(___tldr_current_or_update)" || return

    cd "$_______X_CMD_TLDR_ROOT/$version/pages/"
    local cmd="${1}"
    case "$cmd" in
        "")     ls */* ;;
        */*)    ls */* | grep "$cmd.md" ;;
        *)      ls */* | grep "\/$cmd.md" ;;
    esac
)

___tldr_cat(){
    cand="$( ___tldr_ls "$@" )"
    local num
    num="$(printf "%s" "$cand" | awk 'END{ print NR; }')"

    case $num in
        0)  printf "Not found.\n" >&2; return 1 ;;
        1)  cat "$_______X_CMD_TLDR_ROOT/$(___tldr_current)/pages/$cand" ;;
        *)  printf "Found %s:\n %s\n" "$num" "$cand"; >&2 return 1 ;;
    esac
}

# EndSection


